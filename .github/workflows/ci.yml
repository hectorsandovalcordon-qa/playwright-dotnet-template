name: CI/CD

env:
  DOTNET_VERSION: '8.0'
  RESULTS_DIR: ./tests/UnitTests/bin/Debug/net8.0/allure-results
  REPORT_DIR: allure-report
  BASE_HREF: '/playwright-dotnet-template/'

on:
  pull_request:
    branches: [ main, dev ]

jobs:
  build:
    name: Build Project
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore and Build
        run: |
          dotnet restore ./src/playwright-dotnet-template.csproj
          dotnet build ./src/playwright-dotnet-template.csproj --configuration Debug

  unit-tests-and-sonar:
    name: Run Unit Tests & SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: SonarCloud Scan Begin
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner begin \
            /k:"hectorsandovalcordon-qa_playwright-dotnet-template" \
            /o:"hectorsandovalcordon-qa" \
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.cs.opencover.reportsPaths=./TestResults/coverage.opencover.xml

      - name: Run Unit Tests with Code Coverage
        run: |
          dotnet test ./tests/UnitTests/UnitTests.csproj \
            --configuration Debug \
            --collect:"XPlat Code Coverage" \
            /p:CoverletOutputFormat=opencover \
            /p:CoverletOutput=./TestResults/coverage.opencover.xml

      - name: SonarCloud Scan End
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Upload Allure Results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: ${{ env.RESULTS_DIR }}
