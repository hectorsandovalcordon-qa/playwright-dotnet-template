name: .NET Tests with Allure and GitHub Pages

env:
  DOTNET_VERSION: '9.0'
  RESULTS_DIR: allure-results
  REPORT_DIR: allure-report

on:
  pull_request:
    branches: [ main, dev ]

jobs:
  build:
    name: Build Project
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Build UnitTests project
        run: dotnet build ./tests/UnitTests/UnitTests.csproj --configuration Debug

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Run tests and collect Allure results
        run: |
          dotnet test ./tests/UnitTests/UnitTests.csproj \
            --no-build --configuration Debug

      - name: List allure-results directory contents
        run: ls -la $RESULTS_DIR || echo "Directory not found"

      - name: Mostrar Ã¡rbol de directorios del repo
        run: |
          echo "::group::Estructura del directorio completo"
          find . -type d
          echo "::endgroup::"

      - name: Buscar carpeta allure-results en todo el proyecto
        run: |
          echo "::group::Resultados Allure encontrados en:"
          find . -type d -name "allure-results"
          echo "::endgroup::"

  generate-allure:
    name: Generate Allure Report
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install Allure CLI
        run: |
          curl -sL https://github.com/allure-framework/allure2/releases/download/2.22.1/allure-2.22.1.tgz | tar -xz -C $HOME
          echo "$HOME/allure-2.22.1/bin" >> $GITHUB_PATH

      - name: Generate Allure Report
        run: |
          mkdir -p $REPORT_DIR
          allure generate $RESULTS_DIR --clean -o $REPORT_DIR

      - name: Upload Allure report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: ${{ env.REPORT_DIR }}

  deploy-report:
    name: Deploy to GitHub Pages
    if: success()
    runs-on: ubuntu-latest
    needs: generate-allure

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: ${{ env.REPORT_DIR }}

      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ env.REPORT_DIR }}
          publish_branch: gh-pages
          force_orphan: true
